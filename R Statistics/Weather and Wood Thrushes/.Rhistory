# Chunk 1: Setup workspace
## Prevent scientific notation
options(scipen = 999)
# Chunk 3: eBird Clean Up
# Note: I moved a copy of the prepped eBird dataset from its original folder to my GitHub folder.
## Set the working directory
setwd("/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes")
eBird <- read.csv("ebd_woothr_june_bcr27_zf.csv")
# Filter for just Florida observations
library(dplyr)
eBirdFL <- filter(eBird, state_code == "US-FL")
## Find number of checklists submitted for the month of June in each year.
JuneChecklistsByYear <- aggregate(eBirdFL$checklist_id, by = list(eBirdFL$year), FUN = length)
colnames(JuneChecklistsByYear) <- c('Year', 'Checklists')
## Find success rate for seeing a Wood Thrush during June of each year.
library(tidyverse)
woodthrushObservations <- gather(eBirdFL, key, val, observation_count) %>%
count(year, val) %>%
spread(val, n)
colnames(woodthrushObservations) <- c('Year', 'Absent', 'Yes1', 'Yes2', 'Yes3', 'Yes4')
woodthrushObservationsByYear <- woodthrushObservations %>%
rowwise() %>%
mutate(Saw = sum(c_across(Yes1:Yes4), na.rm = TRUE))
success <- function(a,b,c) {result <- a / (a + b)}
woodthrushObservationsByYear$SuccessRate <- success(woodthrushObservationsByYear$Saw, woodthrushObservationsByYear$Absent)
woodthrushObservationsByYear <- select(woodthrushObservationsByYear, Year, SuccessRate)
eBirdDataCleaned <- merge(JuneChecklistsByYear,woodthrushObservationsByYear, by = "Year")
# Chunk 4: Weather Data
library(readxl)
# excel_sheets('/Users/kimberlyadams/Documents/GitHub/DSC520-Statistics-and-R/data/Project/Weather Data.xlsx')
##  Precipitation
precip.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Weather Data.xlsx',sheet = 'StatewidePrecip')
# Chunk 1: Setup workspace
## Prevent scientific notation
options(scipen = 999)
# Chunk 3: eBird Clean Up
# Note: I moved a copy of the prepped eBird dataset from its original folder to my GitHub folder.
## Set the working directory
setwd("/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes")
eBird <- read.csv("ebd_woothr_june_bcr27_zf.csv")
# Filter for just Florida observations
library(dplyr)
eBirdFL <- filter(eBird, state_code == "US-FL")
## Find number of checklists submitted for the month of June in each year.
JuneChecklistsByYear <- aggregate(eBirdFL$checklist_id, by = list(eBirdFL$year), FUN = length)
colnames(JuneChecklistsByYear) <- c('Year', 'Checklists')
## Find success rate for seeing a Wood Thrush during June of each year.
library(tidyverse)
woodthrushObservations <- gather(eBirdFL, key, val, observation_count) %>%
count(year, val) %>%
spread(val, n)
colnames(woodthrushObservations) <- c('Year', 'Absent', 'Yes1', 'Yes2', 'Yes3', 'Yes4')
woodthrushObservationsByYear <- woodthrushObservations %>%
rowwise() %>%
mutate(Saw = sum(c_across(Yes1:Yes4), na.rm = TRUE))
success <- function(a,b,c) {result <- a / (a + b)}
woodthrushObservationsByYear$SuccessRate <- success(woodthrushObservationsByYear$Saw, woodthrushObservationsByYear$Absent)
woodthrushObservationsByYear <- select(woodthrushObservationsByYear, Year, SuccessRate)
eBirdDataCleaned <- merge(JuneChecklistsByYear,woodthrushObservationsByYear, by = "Year")
# Chunk 4: Weather Data
library(readxl)
# excel_sheets('/Users/kimberlyadams/Documents/GitHub/DSC520-Statistics-and-R/data/Project/Weather Data.xlsx')
##  Precipitation
precip.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Weather Data.xlsx',sheet = 'StatewidePrecip')
library(dplyr)
precip.df <- filter(precip.df, Year > 2009)
precip.df <- filter(precip.df, Year < 2020)
# Trimming columns. I only need the Year and Annual columns.
precipJune.df = precip.df[, c("Year", "JUN")]
precipJune.df$JUN <- as.numeric(precipJune.df$JUN)
precipJune.df[4, 2] = 8.94
# Rename columns as necessary
names(precipJune.df)[names(precipJune.df) == 'JUN'] <- 'Precip'
## Temperature
temp.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Weather Data.xlsx',sheet = 'StatewideTemperature')
temp.df <- filter(temp.df, Year > 2009)
temp.df <- filter(temp.df, Year < 2020)
# Trimming columns. I only need the Year and Annual columns.
tempJune.df = temp.df[, c("Year", "JUN")]
tempJune.df$JUN <- as.numeric(tempJune.df$JUN)
tempJune.df[4, 2] = 81.0
# Rename columns as necessary
names(tempJune.df)[names(tempJune.df) == 'JUN'] <- 'Temp'
# Merge Precip and Temp data into one table
weatherDataPT.df <- merge(precipJune.df,tempJune.df, by = "Year", all = TRUE)
# Chunk 5: Hurricane Data
## Hurricanes
# excel_sheets('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Hurricane Impacts.xlsx')
Hurricanes.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Hurricane Impacts.xlsx',sheet = 'RawData')
# Chunk 1: Setup workspace
## Prevent scientific notation
options(scipen = 999)
# Chunk 3: eBird Clean Up
# Note: I moved a copy of the prepped eBird dataset from its original folder to my GitHub folder.
## Set the working directory
setwd("/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes")
eBird <- read.csv("ebd_woothr_june_bcr27_zf.csv")
# Filter for just Florida observations
library(dplyr)
eBirdFL <- filter(eBird, state_code == "US-FL")
## Find number of checklists submitted for the month of June in each year.
JuneChecklistsByYear <- aggregate(eBirdFL$checklist_id, by = list(eBirdFL$year), FUN = length)
colnames(JuneChecklistsByYear) <- c('Year', 'Checklists')
## Find success rate for seeing a Wood Thrush during June of each year.
library(tidyverse)
woodthrushObservations <- gather(eBirdFL, key, val, observation_count) %>%
count(year, val) %>%
spread(val, n)
colnames(woodthrushObservations) <- c('Year', 'Absent', 'Yes1', 'Yes2', 'Yes3', 'Yes4')
woodthrushObservationsByYear <- woodthrushObservations %>%
rowwise() %>%
mutate(Saw = sum(c_across(Yes1:Yes4), na.rm = TRUE))
success <- function(a,b,c) {result <- a / (a + b)}
woodthrushObservationsByYear$SuccessRate <- success(woodthrushObservationsByYear$Saw, woodthrushObservationsByYear$Absent)
woodthrushObservationsByYear <- select(woodthrushObservationsByYear, Year, SuccessRate)
eBirdDataCleaned <- merge(JuneChecklistsByYear,woodthrushObservationsByYear, by = "Year")
# Chunk 4: Weather Data
library(readxl)
# excel_sheets('/Users/kimberlyadams/Documents/GitHub/DSC520-Statistics-and-R/data/Project/Weather Data.xlsx')
##  Precipitation
precip.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Weather Data.xlsx',sheet = 'StatewidePrecip')
library(dplyr)
precip.df <- filter(precip.df, Year > 2009)
precip.df <- filter(precip.df, Year < 2020)
# Trimming columns. I only need the Year and Annual columns.
precipJune.df = precip.df[, c("Year", "JUN")]
precipJune.df$JUN <- as.numeric(precipJune.df$JUN)
precipJune.df[4, 2] = 8.94
# Rename columns as necessary
names(precipJune.df)[names(precipJune.df) == 'JUN'] <- 'Precip'
## Temperature
temp.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Weather Data.xlsx',sheet = 'StatewideTemperature')
temp.df <- filter(temp.df, Year > 2009)
temp.df <- filter(temp.df, Year < 2020)
# Trimming columns. I only need the Year and Annual columns.
tempJune.df = temp.df[, c("Year", "JUN")]
tempJune.df$JUN <- as.numeric(tempJune.df$JUN)
tempJune.df[4, 2] = 81.0
# Rename columns as necessary
names(tempJune.df)[names(tempJune.df) == 'JUN'] <- 'Temp'
# Merge Precip and Temp data into one table
weatherDataPT.df <- merge(precipJune.df,tempJune.df, by = "Year", all = TRUE)
# Chunk 5: Hurricane Data
## Hurricanes
# excel_sheets('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Hurricane Impacts.xlsx')
Hurricanes.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Hurricane Impacts.xlsx',sheet = 'RawData')
# Trimming columns. I only need the columns that indicate the Year, Max Wind Speed, Category, and whether the hurricane hit Florida.
TrimmedHurricane.df = Hurricanes.df[, c("Date", "MaxWinds_kt", "StatesAffected", "StormNames")]
# Chunk 1: Setup workspace
## Prevent scientific notation
options(scipen = 999)
# Chunk 3: eBird Clean Up
# Note: I moved a copy of the prepped eBird dataset from its original folder to my GitHub folder.
## Set the working directory
setwd("/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes")
eBird <- read.csv("ebd_woothr_june_bcr27_zf.csv")
# Filter for just Florida observations
library(dplyr)
eBirdFL <- filter(eBird, state_code == "US-FL")
## Find number of checklists submitted for the month of June in each year.
JuneChecklistsByYear <- aggregate(eBirdFL$checklist_id, by = list(eBirdFL$year), FUN = length)
colnames(JuneChecklistsByYear) <- c('Year', 'Checklists')
## Find success rate for seeing a Wood Thrush during June of each year.
library(tidyverse)
woodthrushObservations <- gather(eBirdFL, key, val, observation_count) %>%
count(year, val) %>%
spread(val, n)
colnames(woodthrushObservations) <- c('Year', 'Absent', 'Yes1', 'Yes2', 'Yes3', 'Yes4')
woodthrushObservationsByYear <- woodthrushObservations %>%
rowwise() %>%
mutate(Saw = sum(c_across(Yes1:Yes4), na.rm = TRUE))
success <- function(a,b,c) {result <- a / (a + b)}
woodthrushObservationsByYear$SuccessRate <- success(woodthrushObservationsByYear$Saw, woodthrushObservationsByYear$Absent)
woodthrushObservationsByYear <- select(woodthrushObservationsByYear, Year, SuccessRate)
eBirdDataCleaned <- merge(JuneChecklistsByYear,woodthrushObservationsByYear, by = "Year")
# Chunk 4: Weather Data
library(readxl)
# excel_sheets('/Users/kimberlyadams/Documents/GitHub/DSC520-Statistics-and-R/data/Project/Weather Data.xlsx')
##  Precipitation
precip.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Weather Data.xlsx',sheet = 'StatewidePrecip')
library(dplyr)
precip.df <- filter(precip.df, Year > 2009)
precip.df <- filter(precip.df, Year < 2020)
# Trimming columns. I only need the Year and Annual columns.
precipJune.df = precip.df[, c("Year", "JUN")]
precipJune.df$JUN <- as.numeric(precipJune.df$JUN)
precipJune.df[4, 2] = 8.94
# Rename columns as necessary
names(precipJune.df)[names(precipJune.df) == 'JUN'] <- 'Precip'
## Temperature
temp.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Weather Data.xlsx',sheet = 'StatewideTemperature')
temp.df <- filter(temp.df, Year > 2009)
temp.df <- filter(temp.df, Year < 2020)
# Trimming columns. I only need the Year and Annual columns.
tempJune.df = temp.df[, c("Year", "JUN")]
tempJune.df$JUN <- as.numeric(tempJune.df$JUN)
tempJune.df[4, 2] = 81.0
# Rename columns as necessary
names(tempJune.df)[names(tempJune.df) == 'JUN'] <- 'Temp'
# Merge Precip and Temp data into one table
weatherDataPT.df <- merge(precipJune.df,tempJune.df, by = "Year", all = TRUE)
# Chunk 5: Hurricane Data
## Hurricanes
# excel_sheets('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Hurricane Impacts.xlsx')
Hurricanes.df = read_excel('/Users/kimberlyadams/Documents/GitHub/Portfolio/R Statistics/Weather and Wood Thrushes/Hurricane Impacts.xlsx',sheet = 'RawData')
# Trimming columns. I only need the columns that indicate the Year, Max Wind Speed, Category, and whether the hurricane hit Florida.
TrimmedHurricane.df = Hurricanes.df[, c("Date", "MaxWinds_kt", "StatesAffected", "StormNames")]
hurricanesFL.df <- TrimmedHurricane.df[grep("FL", Hurricanes.df$StatesAffected), ]
# Split Date string at /
library(stringr)
hurricanesFL.df[c('StartDate', 'StopDate', 'Year')] <- str_split_fixed(hurricanesFL.df$Date, '/', 3)
# Remove extra columns created and now un-needed StatesAffected column
hurricanesFL.df <- subset(hurricanesFL.df, select = -c(Date, StatesAffected, StartDate, StopDate))
# Extract first 4 characters from new Year column and replace values with new trimmed values
hurricanesFL.df$Year <- substr(hurricanesFL.df$Year, 1, 4)
library(dplyr)
hurricanesFL.df <- filter(hurricanesFL.df, Year > 2009)
hurricanesFL.df <- filter(hurricanesFL.df, Year < 2020)
# Also, Hurricane Irma is listed twice because it changed intensity categories so I will keep the higher category one.
library(dplyr)
hurricanesFL.df <- filter(hurricanesFL.df, MaxWinds_kt != 100)
hurricanesFL.df <- subset(hurricanesFL.df, select = -c(StormNames))
hurricanesFL.df$MaxWinds_kt <- as.numeric(hurricanesFL.df$MaxWinds_kt)
HurricanesAnnual.df <- hurricanesFL.df %>% group_by(Year)
## Find number of hurricanes in each year.
HurricanesAnnualCount.df <- aggregate(HurricanesAnnual.df$MaxWinds_kt, by = list(HurricanesAnnual.df$Year), FUN = length)
colnames(HurricanesAnnualCount.df) <- c('Year', 'HurrCount')
HurricanesAnnualCount.df
## Find average wind speed hurricanes in each year.
HurricanesAnnualWind.df <- aggregate(HurricanesAnnual.df$MaxWinds_kt, by = list(HurricanesAnnual.df$Year), FUN = mean)
colnames(HurricanesAnnualWind.df) <- c('Year', 'HurrWindSpeed')
HurricanesAnnualWind.df
# Merge hurricane data into one table
HurricaneData.df <- merge(HurricanesAnnualCount.df,HurricanesAnnualWind.df, by = "Year", all = TRUE)
# Merge with other weather data
weatherData.df <- merge(weatherDataPT.df,HurricaneData.df, by = "Year", all = TRUE)
weatherData.df[is.na(weatherData.df)] <- 0
# Chunk 6: Final Dataset
FinalData.df <- merge(weatherData.df,eBirdDataCleaned, by = "Year", all = TRUE)
FinalData.df$Temp <- round(FinalData.df$Temp ,digits = 1) # Round off the Temp column to 1 decimal
FinalData.df$SuccessRate <- round(FinalData.df$SuccessRate ,digits = 4) # Round off the SuccessRate to 2 decimal
knitr::kable(FinalData.df, "pipe", caption = "Final Data")
# Chunk 7: Basic Trends
library(ggplot2)
ggplot(FinalData.df, aes(x = Year, y = Precip)) + geom_point() + ggtitle("June Precipitation") + ylab("Precipitation (in)") + scale_x_continuous(breaks = seq(2010, 2019, by = 2)) + scale_y_continuous(limits = c(0, NA)) + geom_smooth()
ggplot(FinalData.df, aes(x = Year, y = Temp)) + geom_point() + ggtitle("June Temperature") + ylab("Temperature (F)") + scale_x_continuous(breaks = seq(2010, 2019, by = 2)) + geom_smooth()
ggplot(FinalData.df, aes(x = Year, y = HurrCount)) + geom_point() + ggtitle("Number of Annual Hurricanes in Florida") + ylab("Hurricanes") + scale_x_continuous(breaks = seq(2010, 2019, by = 2)) + scale_y_continuous(breaks = seq(0, 2, by = 1)) + scale_y_continuous(limits = c(0, NA)) + geom_smooth()
ggplot(FinalData.df, aes(x = Year, y = HurrWindSpeed)) + geom_point() + ggtitle("Max Wind Speed of Annual Hurricanes in Florida") + ylab("Max Wind Speed (kt)") + scale_x_continuous(breaks = seq(2010, 2019, by = 2)) + scale_y_continuous(breaks = seq(0, 150, by = 25), limits = c(0, NA)) + geom_smooth()
ggplot(FinalData.df, aes(x = Year, y = Checklists)) + geom_point() + ggtitle("Number of Checklists Submitted in June") + ylab("Checklists") + scale_x_continuous(breaks = seq(2010, 2019, by = 2)) + geom_smooth()
ggplot(FinalData.df, aes(x = Year, y = SuccessRate)) + geom_point() + ggtitle("Success Rate of Seeing a Wood Thrush in June") + ylab("Success Rate (Success / Attempts)") + scale_x_continuous(breaks = seq(2010, 2019, by = 2)) + scale_y_continuous(limits = c(0, NA)) + geom_smooth()
# Chunk 8: Interactions
library(ggplot2)
library(ggpubr)
ggplot(FinalData.df, aes(x = Precip, y = Checklists)) + geom_point() + ggtitle("Precipitation vs Checklists Submitted") + xlab("Precipitation (in)") + ylab("Checklists") + geom_smooth(method=lm, se=FALSE) + stat_regline_equation(aes(label = ..rr.label..))
ggplot(FinalData.df, aes(x = Temp, y = Checklists)) + geom_point() + ggtitle("Temperature vs Checklists Submitted") + xlab("Temperature (F)") + ylab("Checklists") + geom_smooth(method=lm, se=FALSE) + stat_regline_equation(aes(label = ..rr.label..))
ggplot(FinalData.df, aes(x = Precip, y = SuccessRate)) + geom_point() + ggtitle("Precipitation vs Success of Seeing a Wood Thrush") + xlab("Precipitation (in)") + ylab("Success Rate (Success / Attempts)") + geom_smooth(method=lm, se=FALSE) + stat_regline_equation(aes(label = ..rr.label..))
ggplot(FinalData.df, aes(x = Temp, y = SuccessRate)) + geom_point() + ggtitle("Temperature vs Success of Seeing a Wood Thrush") + xlab("Temperature (F)") + ylab("Success Rate (Success / Attempts)") + geom_smooth(method=lm, se=FALSE) + stat_regline_equation(aes(label = ..rr.label..))
ggplot(FinalData.df, aes(x = Checklists, y = SuccessRate)) + geom_point() + ggtitle("Chescklists Submitted vs Success of Seeing a Wood Thrush") + ylab("Success Rate (Success / Attempts)") + xlab("Checklists") + geom_smooth(method=lm, se=FALSE) + stat_regline_equation(aes(label = ..rr.label..))
ggplot(FinalData.df, aes(x = Precip, y = Temp)) + geom_point() + ggtitle("Precipitation vs Temperature") + ylab("Temperature (F)") + xlab("Precipitation (in)") + geom_smooth(method=lm, se=FALSE) + stat_regline_equation(aes(label = ..rr.label..))
